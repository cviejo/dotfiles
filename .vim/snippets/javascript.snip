
snippet console.log
options head
  console.log(${0:TARGET});

snippet if
options head
	if (${1:true}) {
		${0:target}
	}

snippet if-else
abbr ife
options head
	if (${1:#:condition}) {
		${2}
	} else {
		${3}
	}

snippet for
options head
   for (let ${1:i} = 0; $1 < ${2:#:things}.length; $1 += 1) {
      ${0}
   }

snippet \(\)
options word
   () => { ${0} 

snippet arrow-1
options word
   () => ${0}

snippet arrow-2
options word
   () => { ${0} 

snippet setTimeout
options head
	setTimeout(() => {
		${0}
	}, ${1:1000});

snippet setTimeout-function
options head
	setTimeout(${1:functioName}, ${2:1000});

snippet setInterval
options head
	setInterval(() => {
		${0}
	}, ${1:1000});

snippet setInterval-function
options head
	setInterval(${1:functioName}, ${2:1000});

snippet reduce
options word
	reduce(${1:x} => ${0:expr})

snippet forEach
options word
	forEach(${1:x} => ${0:expr})

snippet map
options word
	map(${1:x} => ${0:expr})

snippet filter
options word
	filter(${1:x} => ${0:expr})

snippet find
options word
	find(${1:x} => ${0:expr})

snippet then
options word
	then(${1:x} => ${0:expr})

snippet switch
options head
	switch (${1:var}) {
		case ${2}:
			${0};
			break;
	
		default:
			break;
	}

snippet try
options head
  try {
    ${1:TARGET}
  } catch (${2:e}) {
    ${3}
  }

snippet try_finally
options head
  try {
    ${1:TARGET}
  } catch (${2:e}) {
    ${3}
  } finally {
    ${4}
  }

snippet require
options word
	require('${1:module}');

snippet JSON.stringify
options head
  JSON.stringify(${1:var}, null, 3);

snippet JSON.parse
options head
  JSON.parse(${1:var});

snippet function
options head
	//----------------------------------------------------
	function ${1:name}(${2}) {
		${0}
	}

